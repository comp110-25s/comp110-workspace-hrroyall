def invert(dictionary_1: dict[str, str]) -> dict[str, str]:
    inverted_dictionary: dict[str, str] = {}
    for key in dictionary_1:
        value = dictionary_1[key]
        inverted_dictionary[value] = key
        if value in inverted_dictionary:
            raise KeyError
        inverted_dictionary[value] = key
    return inverted_dictionary


def count(list_of_something: list[str]) -> dict[str, int]:
    final_count: dict[str, int] = {}
    for key in list_of_something:
        if key in final_count:
            final_count[key] += 1
        else:
            final_count[key] = 1
    return final_count


def favorite_color(color_dictionary: dict[str, str]) -> str:
    a: int = 0
    most_popular_color = str()
    counts_of_colors: dict[str, int] = {}
    for key in color_dictionary:
        value = color_dictionary[key]
        if value in counts_of_colors:
            counts_of_colors[value] += 1
        else:
            counts_of_colors[value] = 1
    for value in counts_of_colors:
        if counts_of_colors[value] > a:
            a = counts_of_colors[value]
            most_popular_color = value
    return most_popular_color


def bin_len(list_of_things: list[str]) -> dict[int, str]: 
    bin_of_str: dict[int, set[str]] = {}
    
   
    for key in list_of_things: 
        value = list_of_things[key]
        bin_of_str[value] = key
        if len(key)

"""3x Unit Tests for bin_len function"""

    def test_bin_len_empty() -> None:
        """Tests a bin_len function containing an empty list."""
        list_of_things: list[str] = []
        assert bin_len(list_of_things) == {}

    def test_bin_len_animals() -> None:
        """Tests a bin_len function using a list of animals."""
        list_of_things: list[str] = ["bear", "duck", "owl", "pig"]
        assert bin_len(list_of_things) == {4: {"bear", "duck"}, 3: {"owl", "pig"}}

    def test_bin_len_duplicates() -> None:
        """Tests a bin_len function using a list containing a duplicate."""
        list_of_things: list[str] = ["the", "the", "fox"]
        assert bin_len(list_of_things) == {3: {"the", "fox"}}